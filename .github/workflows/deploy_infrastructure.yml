name: Deploy Infrastructure
concurrency:
  group: ${{ github.workflow }}

on:
  push:
    branches: ["main"]
    paths:
    - 'terraform/infrastructure/**'
    - '.github/workflows/deploy_infrastructure.yml'
  pull_request:
    branches: ["main"]
    paths:
    - 'terraform/infrastructure/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build_job:
    runs-on: ubuntu-latest
    environment: dev #Should be changed, lol
    defaults:
      run:
        working-directory: ./terraform/infrastructure
    
    env:
      ARM_CLIENT_ID: "${{ secrets.HOMEAUTOMATION_DEV_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.HOMEAUTOMATION_DEV_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.HOMEAUTOMATION_DEV_TENANT_ID }}"
      ARM_USE_AZUREAD: true

    steps:
    - uses: actions/checkout@v3

    - name: Install Terraform
      run: bash "${{ github.workspace }}/.github/scripts/install_terraform.sh" 

    - name: Terraform Fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: |
        terraform init \
        -backend-config=resource_group_name="${{secrets.HOMEAUTOMATION_DEV_TFSTATE_RESOURCE_GROUP_NAME}}" \
        -backend-config=storage_account_name="${{ secrets.HOMEAUTOMATION_DEV_TFSTATE_STORAGE_ACCOUNT_NAME }}" \
        -backend-config=container_name="${{ secrets.HOMEAUTOMATION_DEV_TFSTATE_STORAGE_CONTAINER_NAME }}" \
        -backend-config=key="infrastructure.dev.tfstate"
        
    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -var="tenant_id=${{ secrets.HOMEAUTOMATION_DEV_TENANT_ID }}" -var-file="envs/dev.tfvars" -out=tfplan #UPDATE VARS file

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve tfplan